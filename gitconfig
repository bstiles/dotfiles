# -*- mode: conf -*-
[user]
	name = Brian Stiles
	email = bstiles@bstiles.net
# Specified in $HOME/.config/git/config for overriding under ~/iRise
#	email =

[core]
excludesfile = /Users/bstiles/.gitignore
editor = emacsclient -t
pager = less -XFR
autocrlf = false

[help]
format = man

[color]
diff = auto

[color.diff]
frag = white reverse
meta = reverse
func = bold

[github]
user = bstiles
token = e779ba6bfe01ffa4d9b72e9bd375a46f

[alias]
common-ancestor = !bash -c 'diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | head -1' -
l = log \
        --pretty=tformat:'%C(red)%h%C(green)%>(14)%cr %C(cyan)%<(12,trunc)%an%C(reset) %s %C(yellow)%D%C(reset)' \
        --abbrev-commit \
        --date=relative
# l = log --max-count=24 \
#         --pretty=tformat:'%Cred%h%Creset %Cgreen%>(14)(%cr) %C(cyan)%<(12,trunc)<%an>%Creset - %s %C(yellow)%D%Creset' \
#         --abbrev-commit \
#         --date=relative
lg = !git l --graph --date-order
lga = !git l --graph --date-order --all
ld = !git l --simplify-by-decoration \
            --pretty=tformat:'%C(red)%h%C(green)%>(14)%cr %C(cyan)%<(12,trunc)%an %C(yellow)%D%C(reset) %s'
lda = !git ld --graph --date-order --all
li = ls-files --others --ignored --exclude-standard
s = status
ediff = "!f() { \
commit=${1-HEAD}; \
outdir=$TMPDIR/diff-$(date +%Y%m%d%H%M%S); \
manifest=$outdir/$(basename -- \"$PWD\")-working-diff.org; \
[[ -e $outdir ]] && exit 64; \
mkdir -p $outdir; \
[[ -d $outdir ]] || exit 65; \
git diff --name-status --find-renames $commit | \
while read f; do \
    [[ $f ]] || continue; \
    [[ -f $manifest ]] || printf %s '#    -*- mode: org; comment-start: nil; org-confirm-elisp-link-function: nil -*-\n' > $manifest; \
    info=($(echo \"$f\" \
        | gawk -e '/^R/ && NF == 3 { print \"R\", $2, $3 }' \
               -e '/^[^R]/ { print $0 }')); \
    if [[ -z ${info[@]-} ]]; then \
        printf '%s\n' \"$f\" >> $manifest; \
        continue; \
    fi; \
    if [[ ${info[0]:0:1} == R ]]; then \
        orig=${info[1]}; \
        new=${info[2]}; \
        title=\"$orig -> $new\"; \
    else \
        orig=${info[@]:1}; \
        new=$orig; \
        title=\"$orig\"; \
    fi; \
    if [[ ${info[0]:0:1} == A ]]; then \
        printf '[[file:%s][+++ %s]]\n' \"$PWD/$new\" \"$new\"; \
    else \
        mkdir -p \"$(dirname -- $outdir/\"$orig\")\"; \
        git show $commit:\"$orig\" > $outdir/\"$orig\" || echo 66; \
        printf '[[elisp:(ediff-files \"%s\" \"%s\")][%s %s]]\n' \
               $outdir/\"$orig\" \
               \"$PWD/$new\" \
               \"$(if [[ -f \"$PWD/$new\" ]]; then \
                      echo '   '; \
                   else \
                      echo '---'; \
                   fi)\" \
               \"$title\"; \
    fi >> $manifest; \
done; \
if [[ -f $manifest ]]; then \
    emacsclient -n $manifest; \
else \
    echo No files to diff.; \
fi; \
}; f"

lb = !git lg \
$(git for-each-ref \
      --format='%(upstream:short)' \
      refs/heads/${1-$(git rev-parse --abbrev-ref HEAD)})\
..\
${1-$(git rev-parse --abbrev-ref HEAD)}

lu = !git lg \
${1-$(git rev-parse --abbrev-ref HEAD)}\
..\
$(git for-each-ref \
      --format='%(upstream:short)' \
      refs/heads/${1-$(git rev-parse --abbrev-ref HEAD)})

[web]
browser = open
